#include <Wire.h>
#include <LiquidCrystal_I2C.h>
#include <WiFi.h>
#include <HTTPClient.h>
#include <DHT.h>

// WiFi Credentials
const char* ssid = "Your_SSID";           // Replace with your WiFi SSID
const char* password = "Your_PASSWORD";   // Replace with your WiFi Password

// IoT Gecko Endpoint
String server = "http://iotgecko.com/api/update";  // Replace with your actual IoT Gecko API URL
String apiKey = "YOUR_IOT_GECKO_API_KEY";          // Replace with your IoT Gecko API Key

// DHT11 Sensor
#define DHTPIN 4        // DHT11 connected to GPIO4
#define DHTTYPE DHT11
DHT dht(DHTPIN, DHTTYPE);

// Rain Sensor
#define RAIN_SENSOR_PIN 5  // Rain sensor connected to GPIO5

// LCD Configuration
LiquidCrystal_I2C lcd(0x27, 16, 2);  // LCD I2C address 0x27

void setup() {
    Serial.begin(115200);
    WiFi.begin(ssid, password);
    
    lcd.init();
    lcd.backlight();
    lcd.setCursor(0, 0);
    lcd.print("Connecting WiFi");
    
    // Wait for WiFi Connection
    while (WiFi.status() != WL_CONNECTED) {
        delay(1000);
        Serial.print(".");
    }
    Serial.println("\nConnected to WiFi!");
    
    lcd.clear();
    lcd.print("WiFi Connected");

    dht.begin();
    delay(2000);
}

void loop() {
    float temperature = dht.readTemperature();
    float humidity = dht.readHumidity();
    int rainValue = digitalRead(RAIN_SENSOR_PIN);

    // Check if readings are valid
    if (isnan(temperature) || isnan(humidity)) {
        Serial.println("Failed to read from DHT sensor!");
        return;
    }

    String rainStatus = (rainValue == HIGH) ? "No Rain" : "Rain Detected";

    // Display on LCD
    lcd.clear();
    lcd.setCursor(0, 0);
    lcd.print("Temp: ");
    lcd.print(temperature);
    lcd.print("C");

    lcd.setCursor(0, 1);
    lcd.print("Hum: ");
    lcd.print(humidity);
    lcd.print("%");

    delay(2000);  // Delay to view data

    lcd.clear();
    lcd.setCursor(0, 0);
    lcd.print("Rain: ");
    lcd.print(rainStatus);

    Serial.print("Temp: "); Serial.print(temperature); Serial.println("Â°C");
    Serial.print("Humidity: "); Serial.print(humidity); Serial.println("%");
    Serial.print("Rain Status: "); Serial.println(rainStatus);

    // Send Data to IoT Gecko
    if (WiFi.status() == WL_CONNECTED) {
        HTTPClient http;
        String url = server + "?api_key=" + apiKey + "&temperature=" + String(temperature) +
                     "&humidity=" + String(humidity) + "&rain=" + rainStatus;
        
        http.begin(url);
        int httpResponseCode = http.GET();

        if (httpResponseCode > 0) {
            Serial.println("Data sent to IoT Gecko successfully!");
        } else {
            Serial.println("Error sending data.");
        }
        http.end();
    } else {
        Serial.println("WiFi Disconnected. Reconnecting...");
        WiFi.begin(ssid, password);
    }

    delay(5000);  // Send data every 5 seconds
}
